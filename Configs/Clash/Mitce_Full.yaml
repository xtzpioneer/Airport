# Mitce 机场官网：https://mitce.net/aff.php?aff=4905
# Mitce 机场定制配置：https://raw.githubusercontent.com/xtzpioneer/Airport/main/Configs/Clash/Mitce_Full.yaml
#
# Mihomo 内核：https://github.com/MetaCubeX/mihomo
# Mihomo 内核文档：https://wiki.metacubex.one
#
# Clash Verg Rev 支持：https://github.com/clash-verge-rev/clash-verge-rev
# Mihomo Party 支持：https://github.com/pompurin404/mihomo-party
# ClashMetaForAndroid 支持：https://github.com/MetaCubeX/ClashMetaForAndroid.git
#
# UI供应商：https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip
# UI供应商：https://github.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip
#
# 规则提供商：https://github.com/blackmatrix7/ios_rule_script/tree/master/rule/Clash
# 规则提供商：https://github.com/Loyalsoldier/clash-rules
# 规则提供商：https://github.com/SukkaW/Surge
#
# Geo提供商：https://github.com/MetaCubeX/meta-rules-dat
# Geo提供商：https://github.com/P3TERX/GeoLite.mmdb
#
# 图标提供商：https://github.com/Koolson/Qure.git
#
# 配置文件参考商：https://github.com/MetaCubeX/mihomo/blob/Meta/docs/config.yaml
# 配置文件参考商：https://raw.githubusercontent.com/666OS/YYDS/main/mihomo/config/MihomoPro_icon.yaml
# 配置文件参考商：https://github.com/Coldvvater/Mononoke/blob/master/Clash/Config/Evolve.yaml
# 配置文件参考商：https://github.com/Repcz/Tool/blob/X/Clash/Meta/Mihomo.yaml
# 配置文件参考商：https://github.com/SukkaW/Surge
#
# 支持平台/应用：macOS/Windows/Linux/Clash Verg Rev (Version ≥ 1.7.7）
# 支持平台/应用：macOS/Windows/Linux/Mihomo Party (Version ≥ 1.2.8）
# 支持平台/应用：android/ClashMetaForAndroid (Version >= 2.10.4)
#
# 广告拦截（可关闭）：支持
# 自动测速：支持
# 故障转移（全节点+地区节点）：支持
# 负载均衡（全节点+地区节点 散列+轮询）：支持
# 兜底代理：支持
#
# 微软分流：支持
# 苹果分流：支持
# 谷歌分流：支持
# 国际媒体分流：支持
# 国际互联分流：支持
# 人工智能分流：支持
# 奈飞视频分流：支持
# YouTube 视频分流：支持
# YouTube 音乐分流：支持
# 电报消息分流：支持
# Discord分流：支持
# Emby 视频分流：支持
# Spotify 音乐分流：支持
# 游戏服务分流：支持
# 国际抖音分流：支持
# 网络测速分流：支持
#
# 区分地区：支持
# 手动选择地区地区：支持
# 自动选择地区地区：支持
#
# 更新时间：2025/09/20

# MARK: 端口配置
#
# HTTP(S) 和 SOCKS 代理混合端口
mixed-port: 7890
# HTTP(S) 代理服务器端口
port: 7891
# SOCKS5 代理端口
socks-port: 7892
# 透明代理端口，用于 Linux 和 MacOS
redir-port: 7893
# 适用于 Linux 的透明代理服务器端口（TProxy TCP 和 TProxy UDP）
tproxy-port: 7894

# MARK: 局域网配置
#
# 允许局域网连接
allow-lan: true
# 绑定 IP 地址，仅作用于 allow-lan 为 true，'*'表示所有地址
bind-address: "*"
# http,socks 入口的验证用户名，密码
authentication:
  #- "admin:12345678"
# 设置跳过验证的 IP 段
skip-auth-prefixes:
  - 127.0.0.1/8
  - ::1/128
# 允许连接的 IP 地址段，仅作用于 allow-lan 为 true, 默认值为 0.0.0.0/0 和::/0
lan-allowed-ips:
  - 0.0.0.0/0
  - ::/0
# 禁止连接的 IP 地址段，黑名单优先级高于白名单，默认值为空
lan-disallowed-ips:
  #- 192.168.X.X/32

# MARK: 进程匹配模式配置
#
#  - always, 开启，强制匹配所有进程
#  - strict, 默认，由 mihomo 判断是否开启
#  - off, 不匹配进程，推荐在路由器上使用此模式
find-process-mode: strict

# MARK: 运行模式配置
#
# rule 规则匹配
# global 全局代理 (需要在 GLOBAL 策略组选择代理/策略)
# direct 全局直连
# 此项拥有默认值，默认为rule模式
mode: rule

# MARK: GEOIP数据模式配置
#
# Geodata Url
geox-url:
  geoip: "https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip-lite.dat"
  geosite: "https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat"
  mmdb: "https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/country-lite.mmdb"
  asn: "https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/GeoLite2-ASN.mmdb"
# 更改 geoip 使用文件，mmdb 或者 dat，可选 true/false,true为 dat，此项有默认值 false
geodata-mode: true
# 是否自动更新 geodata
geo-auto-update: false
# 更新间隔，单位：小时
geo-update-interval: 48
# 可选的加载模式如下
# standard：标准加载器
# memconservative：专为内存受限 (小内存) 设备优化的加载器 (默认值)
geodata-loader: memconservative

# MARK: 自定全局 UA
#
# 自定义外部资源下载时使用的的 UA，默认为 clash.meta
global-ua: clash.meta

# MARK: 日志配置
#
# 日志等级 silent/error/warning/info/debug
log-level: info

# MARK: IPV6配置
#
# 开启 IPv6 总开关，关闭阻断所有 IPv6 链接和屏蔽 DNS 请求 AAAA 记录
# 是否允许内核接受 IPv6 流量
# 可选值 true/false,默认为 true
ipv6: true

# MARK: ETag支持
#
# 外部资源下载的 ETag 支持，默认为 true
etag-support: true

# MARK: WEB UI配置
#
# 目录，使用 http://{{external-controller}}/ui/ui-name 访问
# 官方 WEB UI：https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip
# 推荐 WEB UI: https://github.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip
external-ui: ./ui
external-ui-name: "zashboard"
external-ui-url: "https://github.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip"
# API HTTP 监听地址
external-controller: :9090
# API HTTPS 监听地址，需要配置 tls 部分配置文件
external-controller-tls: :9443
# API 的访问密钥
secret: "12345678"
# API CORS 标头配置
external-controller-cors:
  allow-origins:
    - "*"
  allow-private-network: true
# 从Unix socket访问api接口不会验证secret， 如果开启请自行保证安全问题
external-controller-unix: mihomo.sock
# 从Windows namedpipe访问api接口不会验证secret， 如果开启请自行保证安全问题
external-controller-pipe: \\.\pipe\mihomo
# 在 RESTful API 端口上开启 DOH 服务器
# 该URL不会验证secret， 如果开启请自行保证安全问题
external-doh-server: /dns-query

# MARK: TCP 并发配置
#
# TCP 并发连接所有 IP, 将使用最快握手的 TCP
tcp-concurrent: true

# MARK: 延迟配置
#
# 开启统一延迟时，会计算 RTT，以消除连接握手等带来的不同类型节点的延迟差异
# 可选值 true/false
unified-delay: false

# MARK: TLS
#
# 目前仅用于 API 的 https
tls:
  certificate: string # 证书 PEM 格式，或者 证书的路径
  private-key: string # 证书对应的私钥 PEM 格式，或者私钥路径

# MARK: TLS 指纹配置
#
# 全局 TLS 指纹，优先低于 proxy 内的 client-fingerprint
# 可选： "chrome","firefox","safari","ios","random","none" options.
global-client-fingerprint: chrome

# MARK: 路由标记
#
# 为 Linux 下的出站连接提供默认流量标记
routing-mark: 5000

# MARK: 实验性配置
#
experimental:
  #quic-go-disable-gso: false
  #quic-go-disable-ecn: false
  #dialer-ip4p-convert: false

# MARK: TCP Keep Alive 配置
#
# 修改此项以减少移动设备耗电问题
# TCP Keep Alive 包的间隔，单位为秒
keep-alive-interval: 30
# TCP Keep Alive 的最大空闲时间
keep-alive-idle: 600
# 禁用 TCP Keep Alive，在 Amdroid 默认为 true
disable-keep-alive: false

# MARK: 持久化配置
#
# 缓存信息
profile:
  # 存储 select 选择记录
  # 储存 API 对策略组的选择，以供下次启动时使用
  store-selected: true
  # 持久化 fake-ip
  # 储存 fakeip 映射表，域名再次发生连接时，使用原有映射地址
  store-fake-ip: false

# MARK: Hosts配置
#
# 类似于 /etc/hosts, 仅支持配置单个 IP
hosts:
  #localhost: 127.0.0.1

# MARK: 设置出口网卡
#
# 注意：‘interface-name:’ 与 tun 中的 'auto-detect-interface: true' 冲突，需设将 tun 中的设置成 ‘auto-detect-interface: false’
#interface-name: en0

# MARK: TUN配置
#
# 虚拟网卡
tun:
  # 是否开启
  enable: false
  # tun 模式堆栈，如无使用问题，建议使用 mixed栈，默认 gvisor
  # 可用值： system/gvisor/mixed
  # system 使用系统协议栈，可以提供更稳定/全面的 tun 体验，且占用相对其他堆栈更低
  # gvisor 通过在用户空间中实现网络协议栈，可以提供更高的安全性和隔离性，同时可以避免操作系统内核和用户空间之间的切换，从而在特定情况下具有更好的网络处理性能
  # mixed 混合堆栈，tcp 使用 system栈，udp 使用 gvisor栈，使用体验可能相对更好
  #
  # 如果打开了防火墙，则无法使用 system 和 mixed 协议栈，通过以下方式放行内核：
  # Windows: 设置 -> Windows 安全中心 -> 允许应用通过防火墙 -> 选中内核
  # MacOS: 一般无需配置，防火墙默认放行签名软件，如果遇到开启防火墙无法使用的情况，可以尝试放行：系统设置 -> 网络 -> 防火墙 -> 选项 -> 添加 mihomo app
  # Linux: 一般无需配置，防火墙默认不拦截应用，如果遇到开启防火墙无法使用的情况，可以尝试放行 TUN 网卡出站流量（假设 TUN 网卡为 Mihomo）: sudo iptables -A OUTPUT -o Mihomo -j ACCEPT
  stack: system
  # DNS 劫持，将匹配到的连接导入内部 DNS 模块
  # 传统DNS 53 可DNS劫持 隐私保护级别:低
  # DoH 443 防止DNS劫持 隐私保护级别:高
  # DoT 853 防止DNS劫持 隐私保护级别:中
  # DoQ 784 防止DNS劫持 隐私保护级别:高
  dns-hijack:
    - "any:53"
    - "tcp://any:53"
  # 自动选择流量出口接口，多出口网卡同时连接的设备建议手动指定出口网卡
  auto-detect-interface: true
  # 自动设置全局路由，可以自动将全局流量路由进入 tun 网卡。
  auto-route: true
  # 最大传输单元
  mtu: 1500
  # 自动配置 iptables 以重定向 TCP 连接。仅支持 Linux。带有 auto-redirect 的 auto-route 现在可以在路由器上按预期工作，无需干预。
  auto-redirect: true
  # 是否启用严格的路由
  # 启用 auto-route 时执行严格的路由规则
  # 在 Linux 中:
  # 让不支持的网络无法到达
  # 将所有连接路由到 tun
  # 它可以防止地址泄漏，并使 DNS 劫持在 Android 上工作。
  # 在 Windows 中:
  # 添加防火墙规则以阻止 Windows 的 普通多宿主 DNS 解析行为 造成的 DNS 泄露
  # 它可能会使某些应用程序（如 VirtualBox）在某些情况下无法正常工作。
  strict-route: false
  # 启用 auto-route 时排除自定义网段
  route-exclude-address:
    #- 172.16.X.X/16

# MARK: 域名嗅探配置
#
# 域名嗅探
sniffer:
  # 是否启用 sniffer
  enable: false
  # 对 redir-host 类型识别的流量进行强制嗅探
  force-dns-mapping: true
  # 对所有未获取到域名的流量进行强制嗅探
  parse-pure-ip: true
  # 是否使用嗅探结果作为实际访问，默认为 true
  override-destination: true
  # 需要嗅探的协议设置，仅支持 HTTP/TLS/QUIC
  # ports: 端口范围
  # override-destination: 覆盖全局override-destination设置
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  # 强制进行嗅探的域名列表，使用域名通配
  force-domain:
    #- "+.v2ex.com"
  # 跳过嗅探的域名列表，使用域名通配
  skip-domain:
    #- "Mijia Cloud"
  # 跳过嗅探的来源 IP 段列表
  skip-src-address:
    #- 192.168.X.X/32
  # 跳过嗅探的目标 IP 段列表
  skip-dst-address:
    #- 192.168.X.X/32

# MARK: DNS配置
#
# DNS
dns:
  # 关闭将使用系统 DNS
  enable: true
  # 支持的缓存算法
  # lru: Least Recently Used, 默认值
  # arc: Adaptive Replacement Cache 自适应缓存
  cache-algorithm: arc
  # 是否开启 DoH 支持 HTTP/3，将并发尝试
  prefer-h3: false
  # 开启 DNS 服务器监听
  listen: :9053
  # false 将返回 AAAA 的空结果
  ipv6: true
  # 单位：ms，内部双栈并发时，向上游查询 AAAA 时，等待 AAAA 的时间，默认 100ms
  ipv6-timeout: 200
  # 配置fake-ip-filter的匹配模式，可选 blacklist/whitelist
  # 默认为blacklist，即如果匹配成功不返回fake-ip
  # 可设置为whitelist，即只有匹配成功才返回fake-ip
  fake-ip-filter-mode: blacklist
  # 是否查询系统 hosts，默认 true
  use-system-hosts: true
  # 是否回应配置中的 hosts，默认 true
  use-hosts: true
  # 配置后面的nameserver、fallback和nameserver-policy向dns服务器的连接过程是否遵守遵守rules规则
  # 如果为false（默认值）则这三部分的dns服务器在未特别指定的情况下会直连
  # 如果为true，将会按照rules的规则匹配链接方式（走代理或直连），如果有特别指定则任然以指定值为准
  # 仅当proxy-server-nameserver非空时可以开启此选项, 强烈不建议和prefer-h3一起使用
  # 此外，这三者配置中的dns服务器如果出现域名会采用default-nameserver配置项解析，也请确保正确配置default-nameserver
  respect-rules: false
  # 用于解析 nameserver，fallback 以及其他 DNS 服务器配置的，DNS 服务域名
  # 只能使用纯 IP 地址，可使用加密 DNS
  # system 从系统配置中附加 DNS 服务器。如果未找到，它将打印错误日志并跳过。
  default-nameserver:
    # 阿里DNS
    #- 223.5.5.5
    #- "[2400:3200::1]"
    # 腾讯DNS
    #- 119.29.29.29
    #- "[2402:4e00::]"
    # 百度DNS
    #- 180.76.76.76
    #- "[2400:da00::6666]"
    # 抖音DNS
    #- 180.184.1.1
    # 华为DNS
    #- 122.112.208.1
    # 360DNS
    #- 101.226.4.6
    # 系统DNS
    - system
  # 默认的域名解析服务器
  nameserver:
    # GoogleDNS
    #- 8.8.8.8
    #- "[2001:4860:4860::8888]"
    #- https://dns.google/dns-query
    # CloudflareDNS
    #- 1.1.1.1
    #- "[2606:4700:4700::1111]"
    #- https://cloudflare-dns.com/dns-query
    # OpenDNS
    #- 208.67.222.222
    #- "[2620:0:ccc::2]"
    #- https://doh.opendns.com/dns-query
    # Quad9DNS
    #- 9.9.9.10
    #- "[2620:fe::10]"
    # AdGuardDNS
    #- 94.140.14.140
    #- "[2a10:50c0::1:ff]"
    # 阿里DNS
    - 223.5.5.5
    - "[2400:3200::1]"
    #- https://dns.alidns.com/dns-query
    # 腾讯DNS
    - 119.29.29.29
    - "[2402:4e00::]"
    #- https://doh.pub/dns-query
    # 百度DNS
    #- 180.76.76.76
    #- "[2400:da00::6666]"
    # 抖音DNS
    #- 180.184.1.1
    # 华为DNS
    #- 122.112.208.1
    # 360DNS
    #- 101.226.4.6
    #- https://doh.360.cn/dns-query
    # 系统DNS
    - system
  # 后备域名解析服务器，一般情况下使用境外 DNS, 保证结果可信
  # 配置 fallback后默认启用 fallback-filter,geoip-code为 cn
  fallback:
    null
    # GoogleDNS
    #- 8.8.8.8
    #- "[2001:4860:4860::8888]"
    #- https://dns.google/dns-query
    # CloudflareDNS
    #- 1.1.1.1
    #- "[2606:4700:4700::1111]"
    #- https://cloudflare-dns.com/dns-query
    # OpenDNS
    #- 208.67.222.222
    #- "[2620:0:ccc::2]"
    #- https://doh.opendns.com/dns-query
    # Quad9DNS
    #- 9.9.9.10
    #- "[2620:fe::10]"
    # AdGuardDNS
    #- 94.140.14.140
    #- "[2a10:50c0::1:ff]"
  # 用于direct出口域名解析的 DNS 服务器，如果不填则遵循nameserver-policy、nameserver和fallback的配置
  direct-nameserver: null
  # 代理节点域名解析服务器，仅用于解析代理节点的域名，如果不填则遵循nameserver-policy、nameserver和fallback的配置
  proxy-server-nameserver: null
  # 指定域名查询的解析服务器，可使用 geosite, 优先于 nameserver/fallback 查询
  # 键支持域名通配
  # 值支持字符串/数组
  nameserver-policy: null
  # 是否遵循nameserver-policy，默认为不遵守，仅当direct-nameserver不为空时生效
  direct-nameserver-follow-policy: false
  # 可选值 fake-ip/redir-host，默认redir-host
  enhanced-mode: fake-ip
  # fake-ip 池，默认为 198.18.0.1/16
  fake-ip-range: 28.0.0.1/8
  # fakeip 过滤，以下地址不会下发 fakeip 映射用于连接
  # 值支持域名通配以及引入域名集合
  # - rule-set:fakeip-filter fakeip-filter 为 rule-providers 中的名为 fakeip-filter 规则订阅
  # 且 behavior 必须为 domain/classical，当为 classical 时仅会生效域名类规则
  # RH "+.*" 等同于 redir-host 模式
  fake-ip-filter:
    # RH
    - "+.*"
    # LAN
    #- "*.lan"
    #- "*.local"
    #- "*.localhost"
    #- "*.localdomain"
    #- "*.test"
    #- "*.example"
    #- "*.invalid"
    #- "*.home.arpa"
    #- rule-set:direct-private-domain
    #- rule-set:direct-lan-classical
    # NTP
    #- rule-set:ntp-classical
    # STUN
    #- rule-set:stun-classical
  # 后备域名解析服务器筛选，满足条件的将使用 fallback结果或只使用 fallback解析
  fallback-filter:
    null
    # 是否启用 geoip 判断
    #geoip: true
    # 可选值为 国家缩写，默认值为 CN
    # 除了 geoip-code 配置的国家 IP, 其他的 IP 结果会被视为污染
    # geoip-code 配置的国家的结果会直接采用，否则将采用 fallback结果
    #geoip-code: CN
    # 可选值为对于的 geosite 内包含的集合
    # geosite 列表的内容被视为已污染，匹配到 geosite 的域名，将只使用 fallback解析，不去使用 nameserver
    #geosite:
    #- gfw
    #- geolocation-!cn
    # 这些网段的结果会被视为污染，nameserver解析出这些结果时将会采用 fallback的解析结果
    #ipcidr:
    #- 240.0.0.0/4
    # 这些域名被视为已污染，匹配到这些域名，会直接使用 fallback解析，不去使用 nameserver
    #domain:
    #- "+.google.com"
    #- "+.github.com"
    #- "+.youtube.com"

# MARK: 策略组锚点
#
# 节点选择（默认节点：自动选择）
proxie-select: &proxie-select
  type: select
  proxies:
    - 自动选择
    - 手动选择
    - 自动选择地区
    - 手动选择地区
    - 故障转移
    - 地区故障转移
    - 负载均衡散列
    - 负载均衡轮询
    - 地区负载均衡散列
    - 地区负载均衡轮询
    - 香港节点
    - 台湾节点
    - 日本节点
    - 韩国节点
    - 新加坡节点
    - 美国节点
    - 德国节点
    - 澳大利亚节点
    - 英国节点
    - 印度节点

# 区域选择 (默认节点：香港节点)
region-select: &region-select
  proxies:
    - 香港节点
    - 台湾节点
    - 日本节点
    - 韩国节点
    - 新加坡节点
    - 美国节点
    - 德国节点
    - 澳大利亚节点
    - 英国节点
    - 印度节点

# 默认选择 (默认节点：节点选择)
default-select: &default-select
  type: select
  proxies:
    - 节点选择
    - 自动选择
    - 手动选择
    - 自动选择地区
    - 手动选择地区
    - 故障转移
    - 地区故障转移
    - 负载均衡散列
    - 负载均衡轮询
    - 地区负载均衡散列
    - 地区负载均衡轮询
    - 香港节点
    - 台湾节点
    - 日本节点
    - 韩国节点
    - 新加坡节点
    - 美国节点
    - 德国节点
    - 澳大利亚节点
    - 英国节点
    - 印度节点
    - 直连

# 国内选择（默认节点：直连）
cns-select: &cns-select
  type: select
  proxies:
    - 直连
    - 节点选择
    - 自动选择
    - 手动选择
    - 自动选择地区
    - 手动选择地区
    - 故障转移
    - 地区故障转移
    - 负载均衡散列
    - 负载均衡轮询
    - 地区负载均衡散列
    - 地区负载均衡轮询
    - 香港节点
    - 台湾节点
    - 日本节点
    - 韩国节点
    - 新加坡节点
    - 美国节点
    - 德国节点
    - 澳大利亚节点
    - 英国节点
    - 印度节点

# 全球选择（默认节点：节点选择）
globe-select: &globe-select
  type: select
  proxies:
    - 节点选择
    - 自动选择
    - 手动选择
    - 自动选择地区
    - 手动选择地区
    - 故障转移
    - 地区故障转移
    - 负载均衡散列
    - 负载均衡轮询
    - 地区负载均衡散列
    - 地区负载均衡轮询
    - 香港节点
    - 台湾节点
    - 日本节点
    - 韩国节点
    - 新加坡节点
    - 美国节点
    - 德国节点
    - 澳大利亚节点
    - 英国节点
    - 印度节点

# 应用进程选择（默认节点：绕过）
applications-process-select: &applications-process-select
  type: select
  proxies:
    - 绕过
    - 直连
    - 节点选择
    - 自动选择
    - 手动选择
    - 自动选择地区
    - 手动选择地区
    - 故障转移
    - 地区故障转移
    - 负载均衡散列
    - 负载均衡轮询
    - 地区负载均衡散列
    - 地区负载均衡轮询
    - 香港节点
    - 台湾节点
    - 日本节点
    - 韩国节点
    - 新加坡节点
    - 美国节点
    - 德国节点
    - 澳大利亚节点
    - 英国节点
    - 印度节点

# 苹果服务选择（默认节点：苹果服务）
apple-service-select: &apple-service-select
  type: select
  proxies:
    - 苹果服务
    - 直连
    - 节点选择
    - 自动选择
    - 手动选择
    - 自动选择地区
    - 手动选择地区
    - 故障转移
    - 地区故障转移
    - 负载均衡散列
    - 负载均衡轮询
    - 地区负载均衡散列
    - 地区负载均衡轮询
    - 香港节点
    - 台湾节点
    - 日本节点
    - 韩国节点
    - 新加坡节点
    - 美国节点
    - 德国节点
    - 澳大利亚节点
    - 英国节点
    - 印度节点

# 苹果国际服务选择（默认节点：节点选择）
apple-globe-service-select: &apple-globe-service-select
  type: select
  proxies:
    - 节点选择
    - 苹果服务
    - 直连
    - 自动选择
    - 手动选择
    - 自动选择地区
    - 手动选择地区
    - 故障转移
    - 地区故障转移
    - 负载均衡散列
    - 负载均衡轮询
    - 地区负载均衡散列
    - 地区负载均衡轮询
    - 香港节点
    - 台湾节点
    - 日本节点
    - 韩国节点
    - 新加坡节点
    - 美国节点
    - 德国节点
    - 澳大利亚节点
    - 英国节点
    - 印度节点

# 微软服务选择（默认节点：微软服务）
microsoft-service-select: &microsoft-service-select
  type: select
  proxies:
    - 微软服务
    - 直连
    - 节点选择
    - 自动选择
    - 手动选择
    - 自动选择地区
    - 手动选择地区
    - 故障转移
    - 地区故障转移
    - 负载均衡散列
    - 负载均衡轮询
    - 地区负载均衡散列
    - 地区负载均衡轮询
    - 香港节点
    - 台湾节点
    - 日本节点
    - 韩国节点
    - 新加坡节点
    - 美国节点
    - 德国节点
    - 澳大利亚节点
    - 英国节点
    - 印度节点

# 谷歌服务选择（默认节点：谷歌服务）
google-service-select: &google-service-select
  type: select
  proxies:
    - 谷歌服务
    - 节点选择
    - 自动选择
    - 手动选择
    - 自动选择地区
    - 手动选择地区
    - 故障转移
    - 地区故障转移
    - 负载均衡散列
    - 负载均衡轮询
    - 地区负载均衡散列
    - 地区负载均衡轮询
    - 香港节点
    - 台湾节点
    - 日本节点
    - 韩国节点
    - 新加坡节点
    - 美国节点
    - 德国节点
    - 澳大利亚节点
    - 英国节点
    - 印度节点

# MARK: 订阅更新和延迟测试锚点
#
# 字段
#
# interval：健康检查间隔，如不为 0 则启用定时测试，单位为秒
# tolerance：节点切换容差，单位 ms
# lazy：懒惰状态，默认为true,未选择到当前策略组时，不进行测试
# timeout：健康检查超时时间，单位为毫秒
# max-failed-times：最大失败次数，超过则触发一次强制健康检查，默认 5
# disable-udp：禁用该策略组的UDP
# include-all：引入所有出站代理以及代理集合，顺序将按照名称排序（引入不包含策略组,可在proxies引入其他策略组）
# include-all-proxies：引入所有出站代理，顺序将按照名称排序（引入不包含策略组,可在proxies引入其他策略组）
# include-all-providers：引入所有代理集合，顺序将按照名称排序（会使引入代理集合失效）
# filter：筛选满足关键词或正则表达式的节点，可以使用 ` 区分多个正则表达式（仅作用于引入代理集合以及引入所有出站代理）
# exclude-filter：排除满足关键词或正则表达式的节点，可以使用 ` 区分多个正则表达式
# hidden：在 api 返回hidden状态，以隐藏该策略组展示 (需要使用 api 的前端适配)
# icon：在 api 返回icon所输入的字符串，以在该策略组显示 (需要使用 api 的前端适配)

# 节点集合 测试连通性以及延迟
p: &p
  type: http
  interval: 43200
  health-check:
    enable: true
    url: "https://www.gstatic.com/generate_204"
    interval: 180
    tolerance: 50

# 自动选择 测试连通性以及延迟
url-test: &url-test
  type: url-test
  interval: 180
  tolerance: 50
  lazy: true
  url: "https://www.gstatic.com/generate_204"
  disable-udp: false
  timeout: 5000
  max-failed-times: 5
  hidden: true
  include-all-providers: true

# 回退/转移/故障转移 测试连通性以及延迟
fallabck: &fallabck
  type: fallback
  interval: 180
  lazy: true
  url: "https://www.gstatic.com/generate_204"
  disable-udp: false
  timeout: 5000
  max-failed-times: 5
  hidden: true

# 负载均衡-散列 测试连通性以及延迟
load-balance-ch: &load-balance-ch
  type: load-balance
  interval: 180
  lazy: true
  url: "https://www.gstatic.com/generate_204"
  disable-udp: false
  strategy: consistent-hashing
  timeout: 5000
  max-failed-times: 5
  hidden: true

# 负载均衡-轮询 测试连通性以及延迟
load-balance-rr: &load-balance-rr
  type: load-balance
  interval: 180
  lazy: true
  url: "https://www.gstatic.com/generate_204"
  disable-udp: false
  strategy: round-robin
  timeout: 5000
  max-failed-times: 5
  hidden: true

# MARK: 规则行为锚点
#
rule-anchor:
  ip: &ip
    type: http
    interval: 43200
    behavior: ipcidr

  domain: &domain
    type: http
    interval: 43200
    behavior: domain

  classical: &classical
    type: http
    interval: 43200
    behavior: classical

# MARK: 远程订阅配置
#
# 1. url 里填写自己的订阅链接，多个订阅链接时名称不能重复。
# 2. 请使用 Clash 类型订阅链接填入引号""内使用。
# 3. 或可使用通用订阅链接通过 Sub-Store 进行订阅转换(用于 Stash)。
proxy-providers:
  Mitce:
    <<: *p
    path: ./proxy-providers/Mitce.yaml
    url: ""
    # override 覆写节点内容，以下为支持的字段
    override:
      # 跳过证书验证，仅适用于使用 tls 的协议
      #skip-cert-verify: true
      # 是否允许 UDP 通过代理，默认为 false
      #udp: true
      # 上传和下载带宽，以默认以 Mbps 为单位
      #down: "50 Mbps"
      #up: "10 Mbps"
      # 指定当前 proxies 通过 dialer-proxy 建立网络连接，值可以为策略组/出站代理的 name
      #dialer-proxy: proxy
      # 指定节点绑定的接口，从此接口发起连接
      #interface-name: en0
      # 节点发起连接时附加的路由标记
      #routing-mark: 1000
      # 代理软件出站使用的 ip 版本，如果不是 direct，则会影响 server 为域名时使用的 ip 地址
      # 可选：dual/ipv4/ipv6/ipv4-prefer/ipv6-prefer ,默认使用 dual
      # ipv4: 仅使用 IPv4
      # ipv6: 仅使用 IPv6
      # ipv4-prefer: 优先使用 IPv4，对于 TCP 会进行双栈解析，并发链接但是优先使用 IPv4 链接，UDP 则为双栈解析，获取结果中的第一个 IPv4
      # ipv6-prefer:优先使用 IPv6，对于 TCP 会进行双栈解析，并发链接但是优先使用 IPv6 链接，UDP 则为双栈解析，获取结果中的第一个 IPv6
      #ip-version: ipv4-prefer
      # 为节点名称添加固定前缀
      #additional-prefix: "[A]"
      # 为节点名称添加固定后缀
      #additional-suffix: "TEST"
      # 对节点名称内容进行替换，支持正则表达式，pattern 为替换内容，target 为替换目标
      #proxy-name:
      #- pattern: "test"
      #target: "TEST"
      #- pattern: "IPLC-(.*?)倍"
      #target: "IPLC X $1"

# MARK: 筛选条件锚点
#
filter-hk: &filter-hk "香港|深港|沪港|京港|港|(?i)HK|(?i)Hong Kong|🇭🇰"
filter-tw: &filter-tw "台湾|台北|台中|台|新北|彰化|(?i)Taiwan|(?i)TW|🇨🇳"
filter-jp: &filter-jp "日本|川日|东京|大阪|泉日|埼玉|沪日|深日|京日|苏日|沪日|上日|广日|[^-]日|(?i)JP|(?i)Japan|(?i)Tokyo|🇯🇵"
filter-sg: &filter-sg "新加坡|狮城|沪新|京新|深新|杭新|广新|(?i)SG|(?i)Singapore|🇸🇬"
filter-kr: &filter-kr "韩国|首尔|韩|韓|春川|KR|Korea|korea|KOR|🇰🇷"
filter-us: &filter-us "美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|(?i)USA|America|america|(?i)US|(?i)United States|🇺🇲"
filter-de: &filter-de "德国|德意志|柏林|慕尼黑|法兰克福|汉堡|杜塞尔多夫|[^-]德|(?i)DE|(?i)Germany|🇩🇪"
filter-au: &filter-au "悉尼|墨尔本|布里斯班|珀斯|阿德莱德|霍巴特|堪培拉|达尔文|(?i)AU|(?i)Australia|(?i)澳大利亚|🇦🇺"
filter-gb: &filter-gb "伦敦|曼彻斯特|伯明翰|利物浦|爱丁堡|格拉斯哥|布里斯托|纽卡斯尔|威尔士|英格兰|苏格兰|(?i)UK|(?i)GB|(?i)United Kingdom|(?i)英国|🇬🇧"
filter-in: &filter-in "新德里|孟买|班加罗尔|海得拉巴|艾哈迈达巴德|钦奈|卡尔各答|浦那|(?i)IN|(?i)India|(?i)印度|🇮🇳"

# MARK: 定义代理组配置
#
proxy-groups:
  # 手动选择
  - name: 节点选择
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Proxy.png"
    <<: *proxie-select

  - name: 手动选择
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Static.png"
    type: select
    include-all-providers: true

  - name: 手动选择地区
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Static.png"
    type: select
    <<: *region-select

  # 回退/转移/故障转移
  - name: 故障转移
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Available_1.png"
    include-all-providers: true
    <<: *fallabck

  - name: 地区故障转移
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Available_1.png"
    <<:
      - *fallabck
      - *region-select

  # 广告拦截
  - name: 广告拦截
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/AdBlack.png"
    type: select
    proxies: [绕过, 拒绝]

  # 苹果服务
  - name: 苹果服务
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Apple.png"
    <<: *cns-select

  - name: 苹果系统更新
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Apple_Update.png"
    <<: *apple-service-select

  - name: 苹果音乐
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Apple_Music.png"
    <<: *apple-service-select

  - name: iCloud
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/iCloud.png"
    <<: *apple-service-select

  - name: App Store
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/App_Store.png"
    <<: *apple-service-select

  - name: 苹果邮件
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Mail.png"
    <<: *apple-service-select

  - name: 苹果开发
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/TestFlight.png"
    <<: *apple-service-select

  - name: 苹果国际
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Apple_1.png"
    <<: *apple-globe-service-select

  # 微软服务
  - name: 微软服务
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Microsoft.png"
    <<: *cns-select

  - name: 微软必应
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Windows_11.png"
    <<: *microsoft-service-select

  - name: OneDrive
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/OneDrive.png"
    <<: *microsoft-service-select

  - name: GitHub
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/GitHub.png"
    <<: *globe-select

  - name: Copilot
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Copilot.png"
    <<: *globe-select

  # 谷歌服务
  - name: 谷歌服务
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Google_Search.png"
    <<: *globe-select

  - name: YouTube 视频
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/YouTube.png"
    <<: *google-service-select

  - name: YouTube 音乐
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/YouTube_Music.png"
    <<: *google-service-select

  # 电报消息
  - name: 电报消息
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Telegram_X.png"
    <<: *globe-select

  # Discord
  - name: Discord
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Discord.png"
    <<: *globe-select

  # 奈飞视频
  - name: 奈飞视频
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Netflix.png"
    <<: *globe-select
    include-all-providers: true

  # Emby 视频
  - name: Emby 视频
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Emby.png"
    <<: *default-select

  # 人工智能
  - name: OpenAI
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Bot.png"
    <<: *globe-select

  # 国际抖音
  - name: 国际抖音
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/TikTok.png"
    <<: *globe-select

  # Spotify 音乐
  - name: Spotify 音乐
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Spotify.png"
    <<: *globe-select

  # 国际媒体
  - name: 国际媒体
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/ForeignMedia.png"
    <<: *globe-select

  # 国际互联
  - name: 国际互联
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Global.png"
    <<: *globe-select

  # 国内互联
  - name: 国内互联
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/China.png"
    <<: *cns-select

  # 游戏服务
  - name: 游戏服务
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Game.png"
    <<: *default-select

  # 测速测试
  - name: 网速测试
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Speedtest.png"
    <<: *default-select

  # 代理进程
  - name: 代理进程
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Quantumult_X.png"
    <<: *applications-process-select

  # 下载进程
  - name: 下载进程
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Download.png"
    <<: *applications-process-select

  # 地区/区域
  - name: 香港节点
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Hong_Kong.png"
    type: select
    proxies: [香港自动选择, 香港负载均衡散列, 香港负载均衡轮询]
    include-all-providers: true
    filter: *filter-hk

  - name: 台湾节点
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/China.png"
    type: select
    proxies: [台湾自动选择, 台湾负载均衡散列, 台湾负载均衡轮询]
    include-all-providers: true
    filter: *filter-tw

  - name: 日本节点
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Japan.png"
    type: select
    proxies: [日本自动选择, 日本负载均衡散列, 日本负载均衡轮询]
    include-all-providers: true
    filter: *filter-jp

  - name: 新加坡节点
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Singapore.png"
    type: select
    proxies: [新加坡自动选择, 新加坡载均衡散列, 新加坡载均衡轮询]
    include-all-providers: true
    filter: *filter-sg

  - name: 韩国节点
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Korea.png"
    type: select
    proxies: [韩国自动选择, 韩国载均衡散列, 韩国载均衡轮询]
    include-all-providers: true
    filter: *filter-kr

  - name: 美国节点
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/United_States.png"
    type: select
    proxies: [美国自动选择, 美国载均衡散列, 美国载均衡轮询]
    include-all-providers: true
    filter: *filter-us

  - name: 德国节点
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Germany.png"
    type: select
    proxies: [德国自动选择, 德国载均衡散列, 德国载均衡轮询]
    filter: *filter-de
    include-all-providers: true

  - name: 澳大利亚节点
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Australia.png"
    type: select
    proxies: [澳大利亚自动选择, 澳大利亚载均衡散列, 澳大利亚载均衡轮询]
    filter: *filter-au
    include-all-providers: true

  - name: 英国节点
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/United_Kingdom.png"
    type: select
    proxies: [英国自动选择, 英国载均衡散列, 英国载均衡轮询]
    filter: *filter-gb
    include-all-providers: true

  - name: 印度节点
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/India.png"
    type: select
    proxies: [印度自动选择, 印度载均衡散列, 印度载均衡轮询]
    filter: *filter-in
    include-all-providers: true

  # 兜底
  - name: 漏网之鱼
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Final.png"
    <<: *default-select

  # 自动化
  - name: 自动选择
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Auto.png"
    <<: *url-test

  - name: 自动选择地区
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Auto.png"
    type: url-test
    interval: 180
    tolerance: 50
    lazy: true
    url: "https://www.gstatic.com/generate_204"
    disable-udp: false
    timeout: 5000
    max-failed-times: 5
    hidden: true
    <<: *region-select

  - name: 香港自动选择
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Hong_Kong.png"
    <<: *url-test
    filter: *filter-hk

  - name: 台湾自动选择
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/China.png"
    <<: *url-test
    filter: *filter-tw

  - name: 日本自动选择
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Japan.png"
    <<: *url-test
    filter: *filter-jp

  - name: 新加坡自动选择
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Singapore.png"
    <<: *url-test
    filter: *filter-sg

  - name: 韩国自动选择
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Korea.png"
    <<: *url-test
    filter: *filter-kr

  - name: 美国自动选择
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/United_States.png"
    <<: *url-test
    filter: *filter-us

  - name: 德国自动选择
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Germany.png"
    <<: *url-test
    filter: *filter-de

  - name: 澳大利亚自动选择
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Australia.png"
    <<: *url-test
    filter: *filter-au

  - name: 英国自动选择
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/United_Kingdom.png"
    <<: *url-test
    filter: *filter-gb

  - name: 印度自动选择
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/India.png"
    <<: *url-test
    filter: *filter-in

  # 负载均衡
  - name: 负载均衡散列
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Available.png"
    include-all-providers: true
    <<: *load-balance-ch

  - name: 负载均衡轮询
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Available.png"
    include-all-providers: true
    <<: *load-balance-rr

  - name: 地区负载均衡散列
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Available.png"
    <<:
      - *load-balance-ch
      - *region-select

  - name: 地区负载均衡轮询
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Available.png"
    <<:
      - *load-balance-rr
      - *region-select

  - name: 香港负载均衡散列
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Hong_Kong.png"
    include-all-providers: true
    <<: *load-balance-ch
    filter: *filter-hk

  - name: 香港负载均衡轮询
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Hong_Kong.png"
    include-all-providers: true
    <<: *load-balance-rr
    filter: *filter-hk

  - name: 台湾负载均衡散列
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/China.png"
    include-all-providers: true
    <<: *load-balance-ch
    filter: *filter-tw

  - name: 台湾负载均衡轮询
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/China.png"
    include-all-providers: true
    <<: *load-balance-rr
    filter: *filter-tw

  - name: 日本负载均衡散列
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Japan.png"
    include-all-providers: true
    <<: *load-balance-ch
    filter: *filter-jp

  - name: 日本负载均衡轮询
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Japan.png"
    include-all-providers: true
    <<: *load-balance-rr
    filter: *filter-jp

  - name: 新加坡载均衡散列
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Singapore.png"
    include-all-providers: true
    <<: *load-balance-ch
    filter: *filter-sg

  - name: 新加坡载均衡轮询
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Singapore.png"
    include-all-providers: true
    <<: *load-balance-rr
    filter: *filter-sg

  - name: 韩国载均衡散列
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Korea.png"
    include-all-providers: true
    <<: *load-balance-ch
    filter: *filter-kr

  - name: 韩国载均衡轮询
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Korea.png"
    include-all-providers: true
    <<: *load-balance-rr
    filter: *filter-kr

  - name: 美国载均衡散列
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/United_States.png"
    include-all-providers: true
    <<: *load-balance-ch
    filter: *filter-us

  - name: 美国载均衡轮询
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/United_States.png"
    include-all-providers: true
    <<: *load-balance-rr
    filter: *filter-us

  - name: 德国载均衡散列
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Germany.png"
    include-all-providers: true
    <<: *load-balance-ch
    filter: *filter-de

  - name: 德国载均衡轮询
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Germany.png"
    include-all-providers: true
    <<: *load-balance-rr
    filter: *filter-de

  - name: 澳大利亚载均衡散列
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Australia.png"
    include-all-providers: true
    <<: *load-balance-ch
    filter: *filter-au

  - name: 澳大利亚载均衡轮询
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Australia.png"
    include-all-providers: true
    <<: *load-balance-rr
    filter: *filter-au

  - name: 英国载均衡散列
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/United_Kingdom.png"
    include-all-providers: true
    <<: *load-balance-ch
    filter: *filter-gb

  - name: 英国载均衡轮询
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/United_Kingdom.png"
    include-all-providers: true
    <<: *load-balance-rr
    filter: *filter-gb

  - name: 印度载均衡散列
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/India.png"
    include-all-providers: true
    <<: *load-balance-ch
    filter: *filter-in

  - name: 印度载均衡轮询
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/India.png"
    include-all-providers: true
    <<: *load-balance-rr
    filter: *filter-in

  # 内置策略
  - name: 直连
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Direct.png"
    type: select
    udp: true
    hidden: true
    proxies: [DIRECT]

  - name: 拒绝
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Reject.png"
    type: select
    hidden: true
    proxies: [REJECT]

  - name: 绕过
    icon: "https://raw.githubusercontent.com/Koolson/Qure/refs/heads/master/IconSet/Color/Bypass.png"
    type: select
    hidden: true
    proxies: [PASS]

# MARK: 规则集配置
#
rule-providers:
  # 苹果服务
  apple-service-classical:
    <<: *classical
    path: ./rule-providers/apple-service-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Apple/Apple_Classical_No_Resolve.yaml"

  apple-service-domain:
    <<: *domain
    path: ./rule-providers/apple-service-domain.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Apple/Apple_Domain.yaml"

  apple-account-classical:
    <<: *classical
    path: ./rule-providers/apple-account-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/AppleID/AppleID_No_Resolve.yaml"

  apple-system-ota-classical:
    <<: *classical
    path: ./rule-providers/apple-system-ota-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/SystemOTA/SystemOTA_No_Resolve.yaml"

  apple-music-classical:
    <<: *classical
    path: ./rule-providers/apple-music-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/AppleMusic/AppleMusic_No_Resolve.yaml"

  apple-icloud-classical:
    <<: *classical
    path: ./rule-providers/apple-icloud-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/iCloud/iCloud_No_Resolve.yaml"

  apple-app-store-classical:
    <<: *classical
    path: ./rule-providers/apple-app-store-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/AppStore/AppStore_No_Resolve.yaml"

  apple-mail-classical:
    <<: *classical
    path: ./rule-providers/apple-mail-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/AppleMail/AppleMail_No_Resolve.yaml"

  apple-developer-classical:
    <<: *classical
    path: ./rule-providers/apple-developer-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/AppleDev/AppleDev_No_Resolve.yaml"

  apple-beats-classical:
    <<: *classical
    path: ./rule-providers/apple-beats-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Beats/Beats_No_Resolve.yaml"

  apple-proxy-classical:
    <<: *classical
    path: ./rule-providers/apple-proxy-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/AppleProxy/AppleProxy_No_Resolve.yaml"

  # 微软服务
  microsoft-service-classical:
    <<: *classical
    path: ./rule-providers/microsoft-service-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Microsoft/Microsoft_No_Resolve.yaml"

  microsoft-github-classical:
    <<: *classical
    path: ./rule-providers/microsoft-github-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/GitHub/GitHub_No_Resolve.yaml"

  microsoft-onedrive-classical:
    <<: *classical
    path: ./rule-providers/microsoft-onedrive-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/OneDrive/OneDrive_No_Resolve.yaml"

  microsoft-bing-classical:
    <<: *classical
    path: ./rule-providers/microsoft-bing-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Bing/Bing_No_Resolve.yaml"

  microsoft-copilot-classical:
    <<: *classical
    path: ./rule-providers/microsoft-copilot-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Copilot/Copilot_No_Resolve.yaml"

  # 谷歌服务
  google-service-classical:
    <<: *classical
    path: ./rule-providers/google-service-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Google/Google_No_Resolve.yaml"

  google-youtube-classical:
    <<: *classical
    path: ./rule-providers/google-youtube-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/YouTube/YouTube_No_Resolve.yaml"

  google-youtube-music-classical:
    <<: *classical
    path: ./rule-providers/google-youtube-music-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/YouTubeMusic/YouTubeMusic_No_Resolve.yaml"

  google-chromecast-classical:
    <<: *classical
    path: ./rule-providers/google-chromecast-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Chromecast/Chromecast_No_Resolve.yaml"

  google-fcm-classical:
    <<: *classical
    path: ./rule-providers/google-fcm-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/GoogleFCM/GoogleFCM_No_Resolve.yaml"

  google-bard-ai-classical:
    <<: *classical
    path: ./rule-providers/google-bard-ai-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/BardAI/BardAI_No_Resolve.yaml"

  google-gemini-classical:
    <<: *classical
    path: ./rule-providers/google-gemini-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Gemini/Gemini_No_Resolve.yaml"

  # 电报消息
  telegram-classical:
    <<: *classical
    path: ./rule-providers/telegram-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Telegram/Telegram_No_Resolve.yaml"

  # Discord
  discord-classical:
    <<: *classical
    path: ./rule-providers/discord-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Discord/Discord_No_Resolve.yaml"

  # 奈飞视频
  netflix-classical:
    <<: *classical
    path: ./rule-providers/netflix-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Netflix/Netflix_Classical_No_Resolve.yaml"

  # Emby 视频
  emby-classical:
    <<: *classical
    path: ./rule-providers/emby-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Emby/Emby_No_Resolve.yaml"

  # 人工智能
  open-ai-classical:
    <<: *classical
    path: ./rule-providers/open-ai-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/OpenAI/OpenAI_No_Resolve.yaml"

  # 国际抖音
  tiktok-classical:
    <<: *classical
    path: ./rule-providers/tiktok-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/TikTok/TikTok_No_Resolve.yaml"

  # Spotify 音乐
  spotify-classical:
    <<: *classical
    path: ./rule-providers/spotify-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Spotify/Spotify_No_Resolve.yaml"

  # 国际媒体
  globe-media-domain:
    <<: *domain
    path: ./rule-providers/globe-media-domain.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/GlobalMedia/GlobalMedia_Domain.yaml"

  globe-media-classical:
    <<: *classical
    path: ./rule-providers/globe-media-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/GlobalMedia/GlobalMedia_Classical_No_Resolve.yaml"

  # 国际互联
  globe-classical:
    <<: *classical
    path: ./rule-providers/globe-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Global/Global_Classical_No_Resolve.yaml"

  globe-domain:
    <<: *domain
    path: ./rule-providers/globe-domain.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Global/Global_Domain.yaml"

  # 游戏服务
  game-classical:
    <<: *classical
    path: ./rule-providers/game-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Game/Game_No_Resolve.yaml"

  # 国际云计算
  globe-cloud-classical:
    <<: *classical
    path: ./rule-providers/globe-cloud-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Cloud/CloudGlobal/CloudGlobal_No_Resolve.yaml"

  globe-cloud-ip:
    <<: *ip
    path: ./rule-providers/globe-cloud-ip.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Cloud/CloudGlobal/CloudGlobal_IP.yaml"

  # 网速测试
  globe-speedtest-classical:
    <<: *classical
    path: ./rule-providers/globe-speedtest-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Speedtest/Speedtest_No_Resolve.yaml"

  # 广告拦截
  ad-reject-domain:
    <<: *domain
    path: ./rule-providers/ad-reject-domain.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Advertising/Advertising_Domain.yaml"

  ad-reject-classical:
    <<: *classical
    path: ./rule-providers/ad-reject-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Advertising/Advertising_No_Resolve.yaml"

  # 直连
  direct-china-max-no-media-domain:
    <<: *domain
    path: ./rule-providers/direct-china-max-no-media-domain.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/ChinaMaxNoMedia/ChinaMaxNoMedia_Domain.yaml"

  direct-china-max-no-media-ip:
    <<: *ip
    path: ./rule-providers/direct-china-max-no-media-ip.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/ChinaMaxNoMedia/ChinaMaxNoMedia_IP.yaml"

  direct-china-max-no-media-classical:
    <<: *classical
    path: ./rule-providers/direct-china-max-no-media-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/ChinaMaxNoMedia/ChinaMaxNoMedia.yaml"

  direct-china-media-classical:
    <<: *classical
    path: ./rule-providers/direct-china-media-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/ChinaMedia/ChinaMedia_No_Resolve.yaml"

  direct-china-neteasemusic-media-classical:
    <<: *classical
    path: ./rule-providers/direct-china-neteasemusic-media-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/NetEaseMusic/NetEaseMusic_No_Resolve.yaml"

  direct-china-youku-media-classical:
    <<: *classical
    path: ./rule-providers/direct-china-youku-media-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Youku/Youku_No_Resolve.yaml"

  direct-china-tencentvideo-media-classical:
    <<: *classical
    path: ./rule-providers/direct-china-tencentvideo-media-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/TencentVideo/TencentVideo_No_Resolve.yaml"

  direct-china-iqiyi-media-classical:
    <<: *classical
    path: ./rule-providers/direct-china-iqiyi-media-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/iQIYI/iQIYI_No_Resolve.yaml"

  direct-china-douyu-media-classical:
    <<: *classical
    path: ./rule-providers/direct-china-douyu-media-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Douyu/Douyu_No_Resolve.yaml"

  direct-china-himalaya-media-classical:
    <<: *classical
    path: ./rule-providers/direct-china-himalaya-media-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Himalaya/Himalaya_No_Resolve.yaml"

  direct-china-douyin-media-classical:
    <<: *classical
    path: ./rule-providers/direct-china-douyin-media-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/DouYin/DouYin_No_Resolve.yaml"

  direct-china-zhanqi-media-classical:
    <<: *classical
    path: ./rule-providers/direct-china-zhanqi-media-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/zhanqi/zhanqi_No_Resolve.yaml"

  direct-china-51nod-media-classical:
    <<: *classical
    path: ./rule-providers/direct-china-51nod-media-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/51nod/51nod_No_Resolve.yaml"

  direct-lan-classical:
    <<: *classical
    path: ./rule-providers/direct-lan-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Lan/Lan_No_Resolve.yaml"

  direct-private-domain:
    <<: *domain
    path: ./rule-providers/direct-private-domain.yaml
    url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/private.txt"

  direct-cloud-classical:
    <<: *classical
    path: ./rule-providers/direct-cloud-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Cloud/CloudCN/CloudCN_No_Resolve.yaml"

  direct-domain-replenish-domain:
    <<: *domain
    path: ./rule-providers/direct-domain-replenish-domain.yaml
    url: "https://raw.githubusercontent.com/xtzpioneer/Airport/refs/heads/main/Rules/Clash/Direct_Domain_Replenish.yaml"

  # 应用进程
  direct-applications-process-classical:
    <<: *classical
    path: ./rule-providers/direct-applications-process-classical.yaml
    url: "https://raw.githubusercontent.com/xtzpioneer/Airport/refs/heads/main/Rules/Clash/Direct_Applications_Classical.yaml"

  direct-applications-process-replenish-classical:
    <<: *classical
    path: ./rule-providers/direct-applications-process-replenish-classical.yaml
    url: "https://raw.githubusercontent.com/xtzpioneer/Airport/refs/heads/main/Rules/Clash/Direct_Applications_Replenish_Classical.yaml"

  applications-process-download-classical:
    <<: *classical
    path: ./rule-providers/applications-process-download-classical.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Download/Download_No_Resolve.yaml"

  # NTP
  #ntp-classical:
    #<<: *classical
    #path: ./rule-providers/ntp-classical.yaml
    #url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/NTPService/NTPService_No_Resolve.yaml"

  # STUN
  #stun-classical:
    #<<: *classical
    #path: ./rule-providers/stun-classical.yaml
    #url: "https://raw.githubusercontent.com/xtzpioneer/Airport/refs/heads/main/Rules/Clash/STUN_No_Resolve.yaml"

# MARK: 分流规则配置
#
# 注意：规则自上而下匹配，所以规则顺序直接影响分流效果。
# 注意：规则自上而下匹配，所以规则顺序直接影响分流效果。
# 注意：规则自上而下匹配，所以规则顺序直接影响分流效果。

# 首先，请注意，把所有非IP类规则写在 IP类规则之前，这是最没有问题的！
# 避免 DNS 污染和 DNS 泄漏最有效的办法就是永远不在本地进行 DNS 解析。
# 而 Mihomo 能且只能通过 Fake IP 和域名规则匹配的方式 可以实现非直连域名 一定不在本地本机进行任何 DNS 解析。
# 在 Mihomo 中，规则自上而下匹配，只有当遇到 IP 类规则（如 IP-CIDR、IP-CIDR6、GEOIP 和 IP-ASN）时才会发起 DNS 解析。
# 因此，在 Mihomo 中，将会触发 DNS 解析的规则放在域名和 URL 匹配规则后面非常重要。

rules:
  # 广告拦截
  - RULE-SET,ad-reject-domain,广告拦截
  - RULE-SET,ad-reject-classical,广告拦截

  # 私有直连
  - RULE-SET,direct-lan-classical,直连
  - RULE-SET,direct-private-domain,直连

  # GEO私有直连
  - GEOSITE,private,直连
  - GEOIP,private,直连,no-resolve

  # 应用进程
  - RULE-SET,direct-applications-process-classical,代理进程
  - RULE-SET,direct-applications-process-replenish-classical,代理进程
  - RULE-SET,applications-process-download-classical,下载进程

  # 苹果服务
  - RULE-SET,apple-mail-classical,苹果邮件
  - RULE-SET,apple-app-store-classical,App Store
  - RULE-SET,apple-icloud-classical,iCloud
  - RULE-SET,apple-music-classical,苹果音乐
  - RULE-SET,apple-system-ota-classical,苹果系统更新
  - RULE-SET,apple-developer-classical,苹果开发
  - RULE-SET,apple-proxy-classical,苹果国际
  - RULE-SET,apple-account-classical,苹果服务
  - RULE-SET,apple-beats-classical,苹果服务
  - RULE-SET,apple-service-domain,苹果服务
  - RULE-SET,apple-service-classical,苹果服务

  # 微软服务
  - RULE-SET,microsoft-bing-classical,微软必应
  - RULE-SET,microsoft-onedrive-classical,OneDrive
  - RULE-SET,microsoft-github-classical,GitHub
  - RULE-SET,microsoft-copilot-classical,Copilot
  - RULE-SET,microsoft-service-classical,微软服务

  # 谷歌服务
  - RULE-SET,google-youtube-classical,YouTube 视频
  - RULE-SET,google-youtube-music-classical,YouTube 音乐
  - RULE-SET,google-chromecast-classical,谷歌服务
  - RULE-SET,google-fcm-classical,谷歌服务
  - RULE-SET,google-bard-ai-classical,谷歌服务
  - RULE-SET,google-gemini-classical,谷歌服务
  - RULE-SET,google-service-classical,谷歌服务

  # 电报消息
  - RULE-SET,telegram-classical,电报消息

  # Discord
  - RULE-SET,discord-classical,Discord

  # 奈飞视频
  - RULE-SET,netflix-classical,奈飞视频

  # Emby 视频
  - RULE-SET,emby-classical,Emby 视频

  # 人工智能
  - RULE-SET,open-ai-classical,OpenAI

  # 国际抖音
  - RULE-SET,tiktok-classical,国际抖音

  # Spotify 音乐
  - RULE-SET,spotify-classical,Spotify 音乐

  # 游戏服务
  - RULE-SET,game-classical,游戏服务

  # 网速测试
  - RULE-SET,globe-speedtest-classical,网速测试

  # 国际媒体
  - RULE-SET,globe-media-domain,国际媒体
  - RULE-SET,globe-media-classical,国际媒体

  # 国际互联
  - RULE-SET,globe-domain,国际互联
  - RULE-SET,globe-classical,国际互联

  # 国际云计算
  - RULE-SET,globe-cloud-classical,国际互联
  - RULE-SET,globe-cloud-ip,国际互联,no-resolve

  # 国内直连
  - RULE-SET,direct-china-neteasemusic-media-classical,国内互联
  - RULE-SET,direct-china-youku-media-classical,国内互联
  - RULE-SET,direct-china-tencentvideo-media-classical,国内互联
  - RULE-SET,direct-china-iqiyi-media-classical,国内互联
  - RULE-SET,direct-china-douyu-media-classical,国内互联
  - RULE-SET,direct-china-himalaya-media-classical,国内互联
  - RULE-SET,direct-china-douyin-media-classical,国内互联
  - RULE-SET,direct-china-zhanqi-media-classical,国内互联
  - RULE-SET,direct-china-51nod-media-classical,国内互联
  - RULE-SET,direct-china-media-classical,国内互联
  - RULE-SET,direct-china-max-no-media-domain,国内互联
  - RULE-SET,direct-china-max-no-media-classical,国内互联
  - RULE-SET,direct-china-max-no-media-ip,国内互联,no-resolve
  - RULE-SET,direct-domain-replenish-domain,国内互联
  - RULE-SET,direct-cloud-classical,国内互联

  # GEO国内直连
  - GEOSITE,cn,国内互联
  - GEOIP,cn,国内互联,no-resolve

  # 兜底
  - MATCH,漏网之鱼
